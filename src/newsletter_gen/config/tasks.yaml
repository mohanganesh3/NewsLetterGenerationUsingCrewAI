research_task:
  description: >
    Research the latest news on {topic} from reliable sources. Include only 1-2 relevant articles, summarize concisely (<500 characters), and provide URLs. Use concise search queries like "latest news on {topic}". Respect API rate limits with 1-2 second delays between calls. Handle errors with up to 3 retries.

    IMPORTANT INSTRUCTIONS ABOUT USING TOOLS: When using tools, DO NOT ESCAPE the underscore character "_", EVER. If you need to use a tool and pass in a parameter called 'search_query', you should write 'search_query', not 'search\_query'. THIS IS VERY IMPORTANT, else the tool will not work.
  
  expected_output: >
    A markdown document with 1-2 news stories, each with:
    - Title
    - Summary (<500 characters)
    - URL

    Example:
    <EXAMPLE>
      Story 1:
      - Title: **Daily briefing: AI now beats humans at basic reading and maths**
      - Summary: AI systems can now nearly match and sometimes exceed human performance in basic tasks. The report discusses the need for new benchmarks to assess AI capabilities and highlights ethical considerations.
      - URL: [Nature Article](https://www.nature.com/articles/d41586-024-01125-1)
    </EXAMPLE>

edit_task:
  description: >
    Edit the news list:
    - Rewrite titles for better engagement.
    - Add a paragraph explaining why each news item is important.
    - Reorder news based on relevance to {topic}.
    - Validate URLs to ensure they lead to correct news articles.
    - Remove off-topic articles.

    IMPORTANT INSTRUCTIONS ABOUT USING TOOLS: When using tools, DO NOT ESCAPE the underscore character "_", EVER. If you need to use a tool and pass in a parameter called 'search_query', you should write 'search_query', not 'search\_query'. THIS IS VERY IMPORTANT, else the tool will not work.
    
    **NOTE**:
    - Do not fetch new articles; only edit the given ones.
    - Add logic to handle potential issues with rate limits during validation.

  expected_output: >
    A markdown document with all the news to be included in the newsletter of the week. The document should have a title related to the curated stories of the week and a list of news articles.
    
    Each one should contain:
    - Title:
    - Summary: 
    - Why this is important:
    - Source: [URL of the article]

    Here is an example of a document that you are expected to produce:
    <EXAMPLE>
    Title of the day: AI is taking over the world

      - **Title:** AI Surpasses Human Capabilities in Basic Reading and Maths
        **Summary:** Recent advancements in AI technology have enabled systems to match and sometimes exceed human performance in fundamental tasks such as reading and arithmetic. This shift necessitates the creation of new benchmarks to appropriately evaluate AI capabilities.
        **Why this is important:** This development is crucial as it not only showcases the rapid progress in AI but also prompts a reevaluation of how AI is integrated into educational and professional settings. It raises significant ethical questions about the future role of AI in society.
        **Source:** "Title of the article" by ["Source"](https://www.nature.com/articles/d41586-024-01125-1)

        [... more news articles ...]

    </EXAMPLE>

newsletter_task:
  description: >
    Fill the following HTML template with exactly the same information that is given to you. Also, include the following personal message at the beginning of the newsletter in the space provided: {personal_message}

    (If there is no personal message, leave the space empty.)
    
    Follow these rules:
    - Do not truncate the information or change the order of the elements. 
    - Do not modify the content of the news articles.
    - Do not add any additional information to the newsletter.
    - Add ALL the news stories provided to the newsletter. Even if the template only shows one news story, you should include all the news stories provided as context using the format provided in the template.

    {html_template}
  expected_output: >
    Return ONLY the contents of the HTML template, without any tripple quotes like '```', '```html' or any other text. 
    This output will be saved as a HTML file and sent to the subscribers.
